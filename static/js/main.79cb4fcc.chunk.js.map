{"version":3,"sources":["redux/actions/texts.js","containers/TextAdder/index.js","redux/constants/actionTypes.js","components/TextListItem/index.js","containers/TextList/index.js","containers/Slider/index.js","components/Task1/index.js","redux/reducers/texts.js","redux/reducers/counter.js","redux/reducers/index.js","redux/store.js","redux/actions/counter.js","containers/Counter/index.js","components/Task2/index.js","components/Header/index.js","components/App/index.js","serviceWorker.js","index.js","components/Header/logo.png"],"names":["nextId","TextAdder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInput","input","setState","handleAddText","e","preventDefault","addText","state","_this2","react_default","a","createElement","FormGroup","FormControl","type","value","placeholder","onChange","target","Button","onClick","className","Component","connect","content","payload","id","components_TextListItem","deleteText","currStep","texts","ListGroup","keys","map","key","Task1","Grid","Row","Col","lg","sm","xs","containers_TextAdder","containers_TextList","initialState","step","localStorage","getItem","parseInt","combineReducers","counter","arguments","length","undefined","action","objectSpread","_action$payload","defineProperty","omit","createStore","rootReducer","store","subscribe","oldStep","getState","setItem","RangeSlider","handleChange","setStep","lib_default","min","max","Counter","initialTime","Date","now","Math","floor","clearInterval","intervalId","setInterval","currValue","_this3","setCounter","smOffset","Task2","Slider","containers_Counter","_default","updateWindowWidth","bind","assertThisInitialized","window","addEventListener","removeEventListener","innerWidth","w","Navbar","inverse","staticTop","Header","src","logo","alt","Toggle","Collapse","Nav","NavItem","location","reload","eventKey","href","components_Header_default","Boolean","hostname","match","rootElement","document","getElementById","ReactDOM","render","es","App_default","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.79cb4fcc.chunk.js","sourcesContent":["import {ADD_TEXT, DELETE_TEXT} from \"../constants/actionTypes\";\r\n\r\nlet nextId = 0;\r\n\r\nexport const addText = content => ({\r\n    type: ADD_TEXT,\r\n    payload: {\r\n        id: nextId++,\r\n        content\r\n    }\r\n});\r\n\r\nexport const deleteText = id => ({\r\n    type: DELETE_TEXT,\r\n    payload: {id}\r\n});","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addText } from \"../../redux/actions/texts\";\r\nimport {FormGroup, FormControl, Button} from \"react-bootstrap\";\r\n\r\nclass TextAdder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {input: \"\"};\r\n    }\r\n\r\n    updateInput = input => {\r\n        this.setState({ input });\r\n    };\r\n\r\n    handleAddText = (e) => {\r\n        e.preventDefault();\r\n        this.props.addText(this.state.input);\r\n        this.setState({ input: \"\" });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <FormGroup>\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        value={this.state.input}\r\n                        placeholder=\"Enter text\"\r\n                        onChange={e => this.updateInput(e.target.value)}\r\n                    />\r\n                </FormGroup>\r\n                <Button type=\"submit\" onClick={this.handleAddText} className=\"pull-right\">Add text</Button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { addText }\r\n)(TextAdder);","export const ADD_TEXT = \"ADD_TEXT\";\r\nexport const DELETE_TEXT = \"DELETE_TEXT\";\r\nexport const SET_STEP = \"SET_STEP\";","import {Button} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport \"./TextListItem.css\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <li className=\"list-group-item clearfix text-list-item\">\r\n            <span className=\"text\">{props.content}</span>\r\n            <Button className=\"pull-right\" onClick={() => props.deleteText(props.id)}>delete text</Button>\r\n        </li>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport {deleteText} from \"../../redux/actions/texts\";\r\nimport {keys} from \"lodash\";\r\nimport TextListItem from \"../../components/TextListItem\";\r\n\r\nfunction TextList(props) {\r\n    return <ListGroup>\r\n        {keys(props.texts).map((id) => {\r\n            let content = props.texts[id];\r\n            return <TextListItem key={id} id={id} content={content} deleteText={props.deleteText}/>;\r\n        })}\r\n    </ListGroup>;\r\n}\r\n\r\nexport default connect(\r\n    (state) => {\r\n        return state.texts;\r\n    },\r\n    { deleteText }\r\n)(TextList);\r\n","import React, {Component} from \"react\";\r\nimport Slider from 'react-rangeslider'\r\nimport 'react-rangeslider/lib/index.css'\r\nimport {connect} from \"react-redux\";\r\nimport {setStep} from \"../../redux/actions/counter\"\r\nimport store from \"../../redux/store\";\r\n\r\nlet currStep;\r\nstore.subscribe(() => {\r\n    let oldStep = currStep;\r\n    currStep = store.getState().counter.step;\r\n\r\n    if (currStep !== oldStep) {\r\n        localStorage.setItem(\"step\", currStep);\r\n    }\r\n});\r\n\r\nclass RangeSlider extends Component {\r\n\r\n    handleChange = (value) => {\r\n        this.props.setStep(value);\r\n    };\r\n\r\n    render() {\r\n        const { step } = this.props;\r\n        return <div className=\"slider\">\r\n            <Slider\r\n                min={0}\r\n                max={5000}\r\n                step={100}\r\n                value={step}\r\n                onChange={this.handleChange}\r\n            />\r\n            <div className='value'>{step}</div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => {\r\n        return state.counter\r\n    },\r\n    {setStep}\r\n)(RangeSlider);\r\n","import React from \"react\";\r\nimport {Grid, Col, Row} from \"react-bootstrap\";\r\nimport TextAdder from \"../../containers/TextAdder\"\r\nimport TextList from \"../../containers/TextList\"\r\n\r\nexport default function (props) {\r\n    return <Grid>\r\n        <Row>\r\n            <Col lg={12}>\r\n                <h3>Task 1</h3>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col sm={6} xs={12}>\r\n                <TextAdder/>\r\n            </Col>\r\n            <Col sm={6} xs={12}>\r\n                <h4>List:</h4>\r\n                <TextList/>\r\n            </Col>\r\n        </Row>\r\n    </Grid>\r\n}","import {ADD_TEXT, DELETE_TEXT} from \"../constants/actionTypes\";\r\nimport omit from 'lodash/omit';\r\n\r\nconst initialState = {\r\n    texts: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_TEXT: {\r\n            const {id, content} = action.payload;\r\n            return {\r\n                ...state,\r\n                texts: {\r\n                    ...state.texts,\r\n                    [id]: content\r\n                }\r\n            };\r\n        }\r\n        case DELETE_TEXT: {\r\n            const {id} = action.payload;\r\n            return {\r\n                ...state,\r\n                texts: omit(state.texts, id)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_STEP} from \"../constants/actionTypes\";\r\n\r\nconst initialState = {\r\n    step: (() => {\r\n        let step = localStorage.getItem(\"step\");\r\n        if (step !== null) {\r\n            return parseInt(step);\r\n        } else {\r\n            return 2500;\r\n        }\r\n    })()\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_STEP:\r\n            let { step } = action.payload;\r\n            if (step < 1) {\r\n                step = 1;\r\n            }\r\n            return {\r\n                ...state,\r\n                step: step\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport texts from \"./texts\";\r\nimport counter from \"./counter\";\r\n\r\nexport default combineReducers({counter, texts});","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);","import {SET_STEP} from \"../constants/actionTypes\";\r\n\r\nexport const setStep = step => ({\r\n    type: SET_STEP,\r\n    payload: {\r\n        step: step\r\n    }\r\n});","import React, {Component} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport store from \"../../redux/store\";\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialTime = Date.now();\r\n\r\n        this.state = {\r\n            counter: 0\r\n        }\r\n    }\r\n\r\n    setCounter(step) {\r\n        //Set updating frequency no bigger than 60 Hz to improve performance.\r\n        if (step < 1000/60) {\r\n            step = Math.floor(1000/60);\r\n        }\r\n        clearInterval(this.intervalId);\r\n        this.intervalId = setInterval(() => {\r\n            let currValue = Date.now() - this.initialTime;\r\n            this.setState({\r\n                counter: currValue - currValue%step\r\n            })\r\n        }, step);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.currStep = this.props.step;\r\n        this.setCounter(this.currStep);\r\n        store.subscribe(() => {\r\n            let oldStep = this.currStep;\r\n            this.currStep = store.getState().counter.step;\r\n            if (this.currStep !== oldStep) {\r\n                this.setCounter(this.currStep);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Row >\r\n            <Col smOffset={4} sm={8}><h4>Counter</h4></Col>\r\n            <Col smOffset={4} sm={8}><h4>{this.state.counter}</h4></Col>\r\n        </Row>\r\n    }\r\n}\r\n\r\nexport default connect((state) => {\r\n    return state.counter\r\n})(Counter);\r\n","import {Col, Grid, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport Slider from \"../../containers/Slider\"\r\nimport Counter from \"../../containers/Counter\"\r\n\r\nexport default function (props) {\r\n    return <Grid>\r\n        <Row>\r\n            <Col lg={12}>\r\n                <h3>Task 2</h3>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col sm={6} xs={12}>\r\n                <Slider/>\r\n            </Col>\r\n            <Col sm={6} xs={12}>\r\n                <Counter/>\r\n            </Col>\r\n        </Row>\r\n    </Grid>\r\n}","import React, {Component} from \"react\";\r\nimport {Navbar, Nav, NavItem} from \"react-bootstrap\";\r\nimport \"./Header.css\";\r\nimport logo from \"./logo.png\";\r\n\r\nexport default class extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {xs: false};\r\n        this.updateWindowWidth = this.updateWindowWidth.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowWidth();\r\n        window.addEventListener('resize', this.updateWindowWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowWidth);\r\n    }\r\n\r\n    updateWindowWidth() {\r\n        // bootstrap xs is \"less than 768px\"\r\n        this.setState({xs: window.innerWidth < 768, w: window.innerWidth});\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.xs) {\r\n            return <Navbar inverse staticTop>\r\n                <Navbar.Header>\r\n                    <img src={logo} alt=\"PIXELPLEX\" className=\"logo\"/>\r\n                    <Navbar.Toggle />\r\n                </Navbar.Header>\r\n                <Navbar.Collapse>\r\n                    <Nav >\r\n                        <NavItem onClick={() => window.location.reload()} eventKey={1} href=\"#\">\r\n                            Home\r\n                        </NavItem>;\r\n                        <NavItem eventKey={2} href=\"https://pixelplex.io\" target=\"_blank\">\r\n                            Pixelplex\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        }\r\n        return <Navbar inverse staticTop>\r\n            <Navbar.Collapse>\r\n                <img src={logo} alt=\"PIXELPLEX\" className=\"pull-left logo logo-bigscreen\"/>\r\n                <Nav className=\"header\">\r\n                    <NavItem className=\"link\" onClick={() => window.location.reload()} eventKey={1} href=\"#\">\r\n                        Home\r\n                    </NavItem>;\r\n                    <NavItem className=\"link\" eventKey={2} href=\"https://pixelplex.io\" target=\"_blank\">\r\n                        Pixelplex\r\n                    </NavItem>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\nimport Task1 from \"../Task1\"\nimport Task2 from \"../Task2\"\nimport Header from \"../Header\"\n\nexport default class extends Component {\n    render() {\n        return <div>\n            <Header/>\n            <Task1/>\n            <Task2/>\n        </div>\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from \"./redux/store\"\n\nlet rootElement = document.getElementById('root');\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    rootElement);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.b69139c5.png\";"],"sourceRoot":""}